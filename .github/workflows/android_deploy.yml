name: Android App Deploy

on:
  push:
    branches: [main]

env:
  SUPABASE_URL_DEV_AND: ${{ secrets.SUPABASE_URL_PROD }}
  SUPABASE_URL_DEV_IOS: ${{ secrets.SUPABASE_URL_PROD }}
  SUPABASE_KEY_DEV: ${{ secrets.SUPABASE_KEY_PROD }}
  SUPABASE_URL_PROD: ${{ secrets.SUPABASE_URL_PROD }}
  SUPABASE_KEY_PROD: ${{ secrets.SUPABASE_KEY_PROD }}
  CONFIGCAT_AND_TEST_KEY: ${{ secrets.CONFIGCAT_AND_TEST_KEY }}
  CONFIGCAT_AND_LIVE_KEY: ${{ secrets.CONFIGCAT_AND_LIVE_KEY }}
  CONFIGCAT_IOS_TEST_KEY: ${{ secrets.CONFIGCAT_IOS_TEST_KEY }}
  CONFIGCAT_IOS_LIVE_KEY: ${{ secrets.CONFIGCAT_IOS_LIVE_KEY }}
  GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

jobs:
  generate-apk:
    name: Generate APK
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Gradle Cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle-

    - name: Set Up SDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: temurin
        cache: gradle

    - name: Load Google Service JSON file
      run: echo $GOOGLE_SERVICES_JSON | base64 -di > composeApp/google-services.json

    - name: Assemble App Debug APK
      run: ./gradlew composeApp:assembleDebug

    - name: Upload App APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: composeApp/build/outputs/apk/debug/composeApp-debug.apk

    - name: Assemble App Instrumentation Tests
      run: ./gradlew composeApp:assembleDebugAndroidTest

    - name: Upload App Tests APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-androidTest
        path: composeApp/build/outputs/apk/androidTest/debug/composeApp-debug-androidTest.apk

  firebase:
    name: Run UI tests with Firebase Test Lab
    needs: generate-apk
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Gradle Cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle-

    - name: Download App APK
      uses: actions/download-artifact@v4
      with:
        name: app-debug

    - name: Download App Tests APK
      uses: actions/download-artifact@v4
      with:
        name: app-debug-androidTest

    - id: auth
      name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v2
      with:
        project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
        credentials_json: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Run instrumentations tests in Firebase Test Lab
      run: gcloud firebase test android run --type instrumentation --app composeApp-debug.apk --test composeApp-debug-androidTest.apk --device model=shiba,version=34,locale=es,orientation=portrait --timeout 15m

  coverage_report:
    name: Update Code Coverage Report
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Gradle Cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle-

    - name: Set Up SDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: temurin
        cache: gradle

    - name: Load Google Service JSON file
      run: echo $GOOGLE_SERVICES_JSON | base64 -di > composeApp/google-services.json

    - name: Check coverage metrics
      run: ./gradlew koverVerify koverXmlReport

    - name: Upload coverage reports
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: shared/build/reports/kover/report.xml
        disable_search: true
        fail_ci_if_error: false

  distribute:
    name: Distribute app bundle to Play Store
    needs: firebase
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Gradle Cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle-

    - name: Set Up SDK 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17
        cache: gradle

    - name: Load Google Service JSON file
      run: echo $GOOGLE_SERVICES_JSON | base64 -di > composeApp/google-services.json

    - name: Bump version number
      uses: chkfung/android-version-actions@v1.2.3
      with:
        gradlePath: composeApp/build.gradle.kts
        versionCode: ${{ github.run_number }}
        versionName: 1.0.${{ github.run_number }}

    - name: Assemble Release Bundle
      run: ./gradlew composeApp:bundleRelease -Pbuildkonfig.flavor=release

    - name: Sign Release
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: composeApp/build/outputs/bundle/release
        signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE }}
        keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
        alias: ${{ secrets.ANDROID_KEY_ALIAS }}
        keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

    - name: Deploy to internal track
      uses: r0adkll/upload-google-play@v1.1.3
      with:
        serviceAccountJsonPlainText: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
        packageName: uy.jorgemarquez.misionvida
        releaseFiles: composeApp/build/outputs/bundle/release/composeApp-release.aab
        track: internal
        whatsNewDirectory: composeApp/release/whatsNew/
